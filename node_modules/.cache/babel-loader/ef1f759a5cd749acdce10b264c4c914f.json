{"ast":null,"code":"export { shouldInclude, hasDirectives, hasClientExports, getDirectiveNames, getInclusionDirectives } from './graphql/directives';\nexport { createFragmentMap, getFragmentQueryDocument, getFragmentFromSelection } from './graphql/fragments';\nexport { checkDocument, getOperationDefinition, getOperationName, getFragmentDefinitions, getQueryDefinition, getFragmentDefinition, getMainDefinition, getDefaultValues } from './graphql/getFromAST';\nexport { makeReference, isReference, isField, isInlineFragment, valueToObjectRepresentation, storeKeyNameFromField, argumentsObjectFromField, resultKeyNameFromField, getStoreKeyName, getTypenameFromResult } from './graphql/storeUtils';\nexport { addTypenameToDocument, buildQueryFromSelectionSet, removeDirectivesFromDocument, removeConnectionDirectiveFromDocument, removeArgumentsFromDocument, removeFragmentSpreadFromDocument, removeClientSetsFromDocument } from './graphql/transform';\nexport { concatPagination, offsetLimitPagination, relayStylePagination } from './policies/pagination';","map":{"version":3,"sources":["../../src/utilities/index.ts"],"names":[],"mappings":"AAAA,SAGE,aAHF,EAIE,aAJF,EAKE,gBALF,EAME,iBANF,EAOE,sBAPF,QAQO,sBARP;AAUA,SAEE,iBAFF,EAGE,wBAHF,EAIE,wBAJF,QAKO,qBALP;AAOA,SACE,aADF,EAEE,sBAFF,EAGE,gBAHF,EAIE,sBAJF,EAKE,kBALF,EAME,qBANF,EAOE,iBAPF,EAQE,gBARF,QASO,sBATP;AAWA,SAKE,aALF,EAME,WANF,EAOE,OAPF,EAQE,gBARF,EASE,2BATF,EAUE,qBAVF,EAWE,wBAXF,EAYE,sBAZF,EAaE,eAbF,EAcE,qBAdF,QAeO,sBAfP;AAiBA,SAUE,qBAVF,EAWE,0BAXF,EAYE,4BAZF,EAaE,qCAbF,EAcE,2BAdF,EAeE,gCAfF,EAgBE,4BAhBF,QAiBO,qBAjBP;AAmBA,SACE,gBADF,EAEE,qBAFF,EAGE,oBAHF,QAIO,uBAJP","sourceRoot":"","sourcesContent":["export { shouldInclude, hasDirectives, hasClientExports, getDirectiveNames, getInclusionDirectives, } from './graphql/directives';\nexport { createFragmentMap, getFragmentQueryDocument, getFragmentFromSelection, } from './graphql/fragments';\nexport { checkDocument, getOperationDefinition, getOperationName, getFragmentDefinitions, getQueryDefinition, getFragmentDefinition, getMainDefinition, getDefaultValues, } from './graphql/getFromAST';\nexport { makeReference, isReference, isField, isInlineFragment, valueToObjectRepresentation, storeKeyNameFromField, argumentsObjectFromField, resultKeyNameFromField, getStoreKeyName, getTypenameFromResult, } from './graphql/storeUtils';\nexport { addTypenameToDocument, buildQueryFromSelectionSet, removeDirectivesFromDocument, removeConnectionDirectiveFromDocument, removeArgumentsFromDocument, removeFragmentSpreadFromDocument, removeClientSetsFromDocument, } from './graphql/transform';\nexport { concatPagination, offsetLimitPagination, relayStylePagination, } from './policies/pagination';\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}