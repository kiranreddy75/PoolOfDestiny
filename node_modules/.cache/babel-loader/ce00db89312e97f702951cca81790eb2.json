{"ast":null,"code":"var _jsxFileName = \"/Users/kiranreddy/Desktop/React Project/PoolOfDestiny/src/subscriptions/epochSubscription.js\";\nimport { useSubscription } from \"@apollo/react-hooks\";\nimport gql from 'graphql-tag';\nimport React from 'react';\nimport EpochData from \"../components/epochData\";\nconst SUBSCRIBE_CARDANO = gql`\nsubscription CardanoSubscription {\n    Cardano {\n      CurrentEpochSlotNo\n      currentEpochNo\n      currentSlotNo\n      tipBlockNo\n      KESPeriod\n    }\n  }\n`;\n\nconst EpochSubscription = () => {\n  const {\n    data,\n    error,\n    loading\n  } = useSubscription(SUBSCRIBE_CARDANO);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 8\n      }\n    }, \"Error! \", error.message);\n  }\n\n  return data.Cardano.map(data => /*#__PURE__*/React.createElement(EpochData, {\n    epochData: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }\n  }) // <li key={data.currentEpochNo}>\n  // </li>\n  );\n};\n\nexport default EpochSubscription;","map":{"version":3,"sources":["/Users/kiranreddy/Desktop/React Project/PoolOfDestiny/src/subscriptions/epochSubscription.js"],"names":["useSubscription","gql","React","EpochData","SUBSCRIBE_CARDANO","EpochSubscription","data","error","loading","message","Cardano","map"],"mappings":";AAAA,SAASA,eAAT,QAAgC,qBAAhC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,MAAMC,iBAAiB,GAAGH,GAAI;;;;;;;;;;CAA9B;;AAYA,MAAMI,iBAAiB,GAAG,MAAM;AAChC,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA;AAAd,MAAyBR,eAAe,CAACI,iBAAD,CAA9C;;AACA,MAAGI,OAAH,EAAY;AACR,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH;;AACD,MAAGD,KAAH,EAAU;AACV,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaA,KAAK,CAACE,OAAnB,CAAP;AACC;;AACD,SAAOH,IAAI,CAACI,OAAL,CAAaC,GAAb,CAAkBL,IAAD,iBACtB,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEA,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADsB,CAEtB;AACA;AAHK,GAAP;AAKC,CAbD;;AAeA,eAAeD,iBAAf","sourcesContent":["import { useSubscription } from \"@apollo/react-hooks\";\nimport gql from 'graphql-tag';\nimport React from 'react';\nimport EpochData from \"../components/epochData\";\n\nconst SUBSCRIBE_CARDANO = gql`\nsubscription CardanoSubscription {\n    Cardano {\n      CurrentEpochSlotNo\n      currentEpochNo\n      currentSlotNo\n      tipBlockNo\n      KESPeriod\n    }\n  }\n`;\n\nconst EpochSubscription = () => {\nconst {data, error, loading} = useSubscription(SUBSCRIBE_CARDANO);\nif(loading) {\n    return <div>Loading...</div>\n}\nif(error) {\nreturn <div>Error! {error.message}</div>\n}\nreturn data.Cardano.map((data) => (\n  <EpochData epochData={data} />\n  // <li key={data.currentEpochNo}>\n  // </li>\n));\n};\n\nexport default EpochSubscription;"]},"metadata":{},"sourceType":"module"}