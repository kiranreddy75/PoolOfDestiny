{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { ApolloLink } from '../core/ApolloLink';\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\n\nvar WebSocketLink = function (_super) {\n  __extends(WebSocketLink, _super);\n\n  function WebSocketLink(paramsOrClient) {\n    var _this = _super.call(this) || this;\n\n    if (paramsOrClient instanceof SubscriptionClient) {\n      _this.subscriptionClient = paramsOrClient;\n    } else {\n      _this.subscriptionClient = new SubscriptionClient(paramsOrClient.uri, paramsOrClient.options, paramsOrClient.webSocketImpl);\n    }\n\n    return _this;\n  }\n\n  WebSocketLink.prototype.request = function (operation) {\n    return this.subscriptionClient.request(operation);\n  };\n\n  return WebSocketLink;\n}(ApolloLink);\n\nexport { WebSocketLink };","map":{"version":3,"sources":["../../../src/link/ws/webSocketLink.ts"],"names":[],"mappings":";AAAA,SAAS,UAAT,QAA2B,oBAA3B;AAIA,SAAS,kBAAT,QAAkD,4BAAlD;;AA2BA,IAAA,aAAA,GAAA,UAAA,MAAA,EAAA;AAAmC,EAAA,SAAA,CAAA,aAAA,EAAA,MAAA,CAAA;;AAGjC,WAAA,aAAA,CACE,cADF,EACkE;AADlE,QAAA,KAAA,GAGE,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IAHT;;AAKE,QAAI,cAAc,YAAY,kBAA9B,EAAkD;AAChD,MAAA,KAAI,CAAC,kBAAL,GAA0B,cAA1B;AACD,KAFD,MAEO;AACL,MAAA,KAAI,CAAC,kBAAL,GAA0B,IAAI,kBAAJ,CACxB,cAAc,CAAC,GADS,EAExB,cAAc,CAAC,OAFS,EAGxB,cAAc,CAAC,aAHS,CAA1B;AAKD;;;AACF;;AAEM,EAAA,aAAA,CAAA,SAAA,CAAA,OAAA,GAAP,UAAe,SAAf,EAAmC;AACjC,WAAO,KAAK,kBAAL,CAAwB,OAAxB,CAAgC,SAAhC,CAAP;AAGD,GAJM;;AAKT,SAAA,aAAA;AAAC,CAxBD,CAAmC,UAAnC,CAAA","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { ApolloLink } from '../core/ApolloLink';\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\nvar WebSocketLink = (function (_super) {\n    __extends(WebSocketLink, _super);\n    function WebSocketLink(paramsOrClient) {\n        var _this = _super.call(this) || this;\n        if (paramsOrClient instanceof SubscriptionClient) {\n            _this.subscriptionClient = paramsOrClient;\n        }\n        else {\n            _this.subscriptionClient = new SubscriptionClient(paramsOrClient.uri, paramsOrClient.options, paramsOrClient.webSocketImpl);\n        }\n        return _this;\n    }\n    WebSocketLink.prototype.request = function (operation) {\n        return this.subscriptionClient.request(operation);\n    };\n    return WebSocketLink;\n}(ApolloLink));\nexport { WebSocketLink };\n//# sourceMappingURL=webSocketLink.js.map"]},"metadata":{},"sourceType":"module"}